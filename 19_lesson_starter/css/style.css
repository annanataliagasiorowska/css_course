@import url("https://fonts.googleapis.com/css2?family=Nunito&display=swap");

/* || RESET */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

/* || UTILITY CLASSES */
.nowrap {
  white-space: nowrap;
}

/* || GENERAL STYLES */
html {
  scroll-behavior: smooth;
}

body {
  font: 1.5rem "Nunito", sans-serif;
  min-height: 100vh;
  background-color: #475569;
  background-image: radial-gradient(whitesmoke, #475569);
  display: flex;
  flex-direction: column;
}

/* we can write it like this
:is(header, footer)
and the rest of the below code
the difference will be in specificity, if we add
some element which has a higher specificity, 
all elements in parenthesis will have this higher
specificity (which I can seen when hover over selector)
if we add
:is(header, footer, .card) specificity will change
from (0 0 1) to (0 1 0) and the I couldn't override 
eg.color in selector header... 
similar selector pseudo class :where(header, footer, .card)
specificity is always (0 0 0) */

header,
footer {
  position: sticky;
  background-color: #1e293b;
  color: whitesmoke;
  text-align: center;
  z-index: 1;
}

header {
  top: 0;
}

nav {
  background-color: #fff;
  padding: 0.5rem;
  border-bottom: 2px solid #000;
  font-weight: bolder;
  display: flex;
  justify-content: space-evenly;
}

nav a:link,
nav a:visited {
  color: #000;
}

/* the same as above */
/* nav a:any-link {
  color: black;
} */

nav a:hover,
nav a:focus {
  color: hsla(0, 0%, 20%, 0.6);
}

/* the same as above */
/* nav :is(a:hover, a:focus) {
  color: hsla(0, 0%, 20%, 0.6);
} */

nav a:active {
  color: red;
}

main {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  padding: 1rem;
}

footer {
  bottom: 0;
}

/* || PROFILE CARD */
.card {
  scroll-margin-top: 8rem;
  width: min(100%, 350px);
  background-color: #cbd5e1;
  border: 2px solid #000;
  border-radius: 15px;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.card:target {
  border: 2px solid rebeccapurple;
}

.card figure {
  display: flex;
  flex-flow: column nowrap;
}

.card img {
  border: 5px double #333;
  border-radius: 50%;
}

/* selecting any image with alt attribute, so we can 
 base our selectors on attributes */
/* .card img[alt] {
  border: 10px solid red;
} */
/* choosing img without alt attribute eg. to check
if we didn't forget to add somewhere */
/* .card img:not[alt] {
  border: 10px solid red;
} */


/* nth-child selector is based on the original order
within html code */
.card:nth-child(2) {
  background-color: papayawhip;
}

.card figcaption::after {
  content: 	'âœ¨';
  display: block;
}

.card figcaption::first-line {
  font-size: 3rem;
}

/* to add absolute position in children elements */
.card p {
  position: relative;
}

.card p::before {
  content: open-quote;
  font-size: 3em;
  position: absolute;
  top: -0.25em;
  left: -0.5em;
}
.card p::after {
  content: close-quote;
  font-size: 3em;
  position: absolute;
  top: -0.25em;
  border-right-style: -0.5em;
}



.card figcaption {
  font-weight: bolder;
  font-size: 2rem;
  margin: 1rem;
  text-align: center;
}

/* || SMALL */
@media screen and (min-width: 576px) {
  main {
    justify-content: center;
    flex-flow: row wrap;
    padding: 1rem;
  }
  .card {
    width: min(100%, 400px);
  }
  .card:last-child {
    order: -1;
  }
}

/* || MEDIUM */
@media screen and (min-width: 768px) {
  nav {
    display: none;
  }
  .card {
    width: min(100%, 325px);
  }
  .card figure {
    flex-flow: column-reverse;
  }
  .card p {
    margin-top: 1rem;
  }
}

/* || LARGE */
@media screen and (min-width: 992px) {
  .card {
    width: min(100%, 400px);
  }
  .card:nth-child(2) {
    order: -1;
  }
}

/* || XL  */
@media screen and (min-width: 1200px) {
  .card {
    width: min(calc(33% - 1rem), 500px);
  }
}

/* || MOBILE DEVICE LANDSCAPE  */
@media screen and (max-height: 425px) and (min-aspect-ratio: 7/4) {
  h1 {
    font-size: 1.5rem;
  }

  nav {
    display: none;
  }

  main {
    flex-flow: row nowrap;
    justify-content: space-evenly;
    align-items: stretch;
  }

  .card {
    width: min(calc(33% - 0.25rem), 200px);
  }

  .card figcaption,
  .card p {
    font-size: 1.25rem;
  }
}
